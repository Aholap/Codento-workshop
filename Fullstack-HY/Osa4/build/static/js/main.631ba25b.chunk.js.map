{"version":3,"sources":["services/blogs.js","reducers/BlogReducer.js","reducers/loginReducer.js","components/BlogsByUsers.js","components/comments.js","components/SingleBlog.js","services/login.js","components/RemoveButton.js","components/Blog.js","hooks/index.js","components/blogForm.js","components/Togglable.js","reducers/NfReducer.js","components/Notification.js","components/SingleUser.js","App.js","services/redux_store.js","index.js"],"names":["baseUrl","token","services_blogs","newToken","concat","axios","get","then","response","data","newObject","config","headers","Authorization","console","log","post","r","id","put","delete","initialState","initializeBlogs","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","bls","wrap","_context","prev","next","sent","type","stop","_x","apply","this","arguments","like","_ref4","_callee4","_context4","_x4","BlogReducer","state","length","undefined","action","blogToComment","find","b","nBlogs","map","blogToLike","likes","newBlogs","filter","setU","user","loginReducer","con","connect","blogs","message","props","x","username","react_default","createElement","react_router_dom","to","con_2","BlogsByUsers","addComment","comment","_ref2","_callee2","_context2","com","_x2","_useState","useState","_useState2","slicedToArray","comments","setComments","blog","_useState3","_useState4","commentInput","setInput","useEffect","value","onChange","event","target","onClick","useParams","title","author","url","newBlog","likeBlog","name","components_comments","postLogin","req","propTypes","PropTypes","string","isRequired","services_login","RemBut","deleteBlog","Blog","blg","showBlog","setBlogShow","blogStyle","paddingTop","paddingLeft","border","borderWidth","marginBottom","data-testid","style","RemoveButton","useField","setValue","reset","preventDefault","BlogForm","addBlog","onSubmit","Togglable","React","forwardRef","ref","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","buttonLabel","children","reducer","ConnectAnecdotes","className","SingleUser","_useState5","_useState6","setBlogs","uName","pW","_useState7","_useState8","setUser","_useState9","_useState10","errM","setErrM","blogFormRef","createRef","_useState11","_useState12","init_trigger","setInitTrig","fBlogs","getAll","B","tempBlog","loggedUserJSON","window","localStorage","getItem","JSON","parse","setToken","blogToAdd","current","create","setNot","addNew","setTimeout","handleLogout","removeItem","confirm","remove","delBlog","userToLog","password","login","l","setItem","stringify","catch","react_router","exact","path","render","components_Notification","components_Togglable","blogForm","components_Blog","key","components_BlogsByUsers","components_SingleUser","components_SingleBlog","mes","con_3","cont","_ref3","_callee3","_context3","_x3","_ref5","_callee5","_context5","_x5","con_4","con_5","redu","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","es","src_App","document","getElementById","subscribe"],"mappings":"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","file":"static/js/main.631ba25b.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = 'http://localhost:3003/blogs'\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = (newObject) => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n\r\n  console.log(newObject)\r\n  const response = axios.post(baseUrl, newObject, config)\r\n\r\n  return response.then(r => r.data)\r\n}\r\n\r\nconst put = (newObject, id) => {\r\n  console.log(newObject)\r\n  console.log(baseUrl+'/'+id)\r\n  const request = axios.put(baseUrl+'/'+id, newObject)\r\n  return request.then(r => r.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  }\r\n  console.log(id)\r\n  const request = axios.delete(baseUrl+'/'+id, config)\r\n  return request.then(r => r.data)\r\n}\r\n\r\nexport default { setToken , getAll, create, put, remove }","import a from '../services/blogs'\r\nconst initialState = []\r\n  \r\n  \r\n  \r\n  const BlogReducer = (state = initialState , action) => {\r\n  \r\n  \r\n    console.log(action)\r\n    \r\n\r\n    switch (action.type) {\r\n        case 'INIT_BLOGS':\r\n            console.log(\"initializing blogs\")\r\n            console.log(action.data)\r\n            return (action.data)\r\n\r\n        case 'NEW_BLOG':\r\n        \r\n        console.log(action.data)\r\n        console.log(state)\r\n         return(state.concat(action.data))\r\n\r\n\r\n\r\n\r\n        case 'NEW_COMMENT':\r\n            console.log(state)\r\n            let blogToComment = state.find(b => b.id == action.id)\r\n            console.log(blogToComment)\r\n            \r\n           let nBlogs = [].concat(state)\r\n           nBlogs.map(b => {\r\n               if(b.id == action.id){\r\n                  b = blogToComment\r\n               }\r\n           })\r\n           \r\n            return(nBlogs)\r\n        \r\n        \r\n\r\n\r\n        case 'LIKE':\r\n            let blogToLike = state.find(b => b.id == action.id)\r\n           console.log(blogToLike)\r\n            blogToLike.likes = blogToLike.likes + 1\r\n            let newBlogs = [].concat(state)\r\n            \r\n            newBlogs.map(b => {\r\n                if(b.id == action.id){\r\n                    b = blogToLike\r\n                }\r\n            })\r\n            \r\n\r\n            return(newBlogs)\r\n        \r\n        case 'DELETE_BLOG':\r\n            console.log(action)\r\n            return(state.filter(b => b.id != action.id))\r\n\r\n\r\n        default: return state\r\n        }\r\n\r\n    }\r\n\r\nexport const initializeBlogs = () => {\r\n    return async dispatch => {\r\n        const bls = await a.getAll()\r\n       \r\n        \r\n        \r\n        console.log(bls)\r\n        dispatch({\r\n        type: 'INIT_BLOGS',\r\n        data: bls\r\n        })\r\n    }\r\n}\r\n\r\nexport const addComment = (comment, id) => {\r\n\r\n    return async dispatch => {\r\n        \r\n\r\n        dispatch({\r\n            type: 'NEW_COMMENT',\r\n            com: comment,\r\n            id: id\r\n        })\r\n    }\r\n}\r\n\r\nexport const addNew = (cont) => {\r\n    console.log(cont)\r\n    return async dispatch => {\r\n        dispatch({\r\n            type : 'NEW_BLOG',\r\n            data: cont\r\n        })\r\n    }\r\n}\r\n\r\nexport const like = (id) => {\r\n    console.log(id)\r\n    return async dispatch => {\r\n        dispatch({\r\n            type : 'LIKE',\r\n            id: id\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const delBlog = (id) => {\r\n    return async dispatch => {\r\n        dispatch({\r\n            type: 'DELETE_BLOG',\r\n            id: id\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n      \r\n\r\n  \r\n  \r\n  export default BlogReducer","\r\n\r\nconst initialState = null\r\n\r\n\r\nconst loginReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type){\r\n        case \"NEW_USER\":\r\n            console.log(action.user)\r\n            return(action.user)\r\n            \r\n        default : return state\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const setU = (user) => {\r\n    console.log(user)\r\n    return async dispatch => {\r\n        dispatch({\r\n            type: \"NEW_USER\",\r\n            user: user\r\n        })\r\n    }\r\n}\r\n\r\n    \r\nexport default loginReducer","import {BrowserRouter as Router,\r\n    Route, Link,useParams, Redirect, withRouter\r\n    } from 'react-router-dom'\r\nimport React from 'react'\r\nimport {useState} from 'react'\r\nimport { connect } from 'react-redux'\r\nimport getAll from '../services/blogs'\r\nimport {initializeBlogs} from '../reducers/BlogReducer'\r\nimport {setU} from '../reducers/loginReducer'\r\n\r\nconst padding = {padding : 5}\r\n\r\nconst BbyUser = (props) => {\r\n    let x = null\r\n    let id = 1\r\n    props.blogs.map(b => {\r\n        if(b.user.username == props.user.username){\r\n            x = x+1\r\n            id = b.user.id\r\n        }\r\n    })\r\n    \r\n    \r\n    \r\n    return(\r\n        <div>\r\n           <h1>\r\n                Users\r\n            </h1> \r\n            <div>\r\n                blogs created\r\n            </div>\r\n            <div>\r\n                <Link to={\"/users/\" + id}> {props.user.username + ':  ' + x} </Link>\r\n                 \r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    // joskus on hyödyllistä tulostaa mapStateToProps:ista...\r\n\r\n    console.log(state)\r\n\r\n    return {\r\n    blogs: state.blogs,\r\n    message: state.message,\r\n    user: state.user\r\n        }\r\n    }\r\nconst con = connect(mapStateToProps)(BbyUser)\r\nconst con_2 = connect(null, {setU})(con)\r\nconst BlogsByUsers = connect(null, {initializeBlogs})(con_2)\r\nexport default BlogsByUsers\r\n","import React, { useEffect } from 'react'\r\nimport {useState} from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {addComment} from '../reducers/BlogReducer'\r\nimport put from '../services/blogs'\r\n\r\n\r\n\r\nconst Comments = (props) => {\r\n    const [comments, setComments] = useState([])\r\n    \r\n    console.log(props.blog)\r\n    const [commentInput, setInput] = useState('')\r\n    console.log(props)\r\n    const changeText = (event) => {\r\n        setInput(event.target.value)\r\n    }\r\n\r\n\r\n    const addComment = async () => {\r\n        console.log(props.blog.id)\r\n\r\n        let b = props.blog\r\n        b.comments = b.comments.concat(commentInput)\r\n        console.log(b)\r\n        await put.put(b ,props.blog.id)\r\n\r\n        setComments(props.blog.comments)\r\n        \r\n    }\r\n\r\n    useEffect(() => {\r\n        setComments(props.blog.comments)\r\n    },[])\r\n\r\n\r\n\r\n    \r\n    console.log(commentInput)\r\n\r\n\r\n    return(\r\n\r\n        \r\n        <div>\r\n\r\n            <input value={commentInput} type='text' onChange={changeText} />\r\n            <button onClick={ () => addComment()}>\r\n                Add comment\r\n            </button>\r\n            {comments.map(com =>\r\n          \r\n          \r\n          <li>\r\n              {com}\r\n          </li>\r\n          \r\n          )}\r\n                \r\n                  \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    // joskus on hyödyllistä tulostaa mapStateToProps:ista...\r\n    \r\n    \r\n    \r\n    return {\r\n      blogs: state.blogs,\r\n      message: state.message,\r\n      user: state.user\r\n        }\r\n}\r\nconst con = connect(null,{addComment})(Comments)\r\nexport default connect(mapStateToProps)(con)","import {connect} from 'react-redux'\r\nimport {BrowserRouter as Router,\r\n    Route, Link,useParams, Redirect, withRouter\r\n    } from 'react-router-dom'\r\nimport put from '../services/blogs'\r\nimport React, { useState } from 'react'\r\nimport Comments from './comments'\r\nimport {like} from '../reducers/BlogReducer'\r\n\r\n\r\n\r\nconst SingleBlog = (props) => {\r\n\r\n    \r\n    const id = useParams().id\r\n    console.log(id)\r\n    console.log(props.blogs)\r\n    const blog = props.blogs.find(b => b.id == id)\r\n    console.log(blog)\r\n\r\n    \r\n    const likeBlog = (blog) => {\r\n        console.log(blog.user)\r\n        const newBlog = {\r\n          title: blog.title,\r\n          author: blog.author,\r\n          url: blog.author,\r\n          likes: blog.likes,\r\n          user: blog.user\r\n        }\r\n        const id=blog.id\r\n        put.put(newBlog,id)\r\n        props.like(id)\r\n      }\r\n\r\n\r\n\r\n    if(blog == null){\r\n        return(null)\r\n    }\r\n    return(\r\n        <div>\r\n            <h1>\r\n                {blog.title +' '+ blog.author}\r\n            </h1>\r\n            <div>\r\n                {blog.url}\r\n            </div>\r\n            <div>\r\n                likes {' '+blog.likes} <button onClick = {() => likeBlog(blog)}>like</button>\r\n            </div>\r\n            <div>\r\n                added by {' ' + blog.user.name}\r\n            </div>\r\n            <div>\r\n                <h3>\r\n                    comments\r\n                </h3>\r\n                <div>\r\n                    <Comments blog = {blog}/>\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    // joskus on hyödyllistä tulostaa mapStateToProps:ista...\r\n    \r\n    \r\n    \r\n    return {\r\n      blogs: state.blogs,\r\n      message: state.message,\r\n      user: state.user\r\n        }\r\n}\r\nconst con = connect(mapStateToProps)(SingleBlog)\r\n\r\nexport default connect(null,{like})(con)","import axios from 'axios'\r\nimport PropTypes from 'prop-types'\r\nconst baseUrl = 'http://localhost:3003/login'\r\n\r\n\r\nconst postLogin = (user) => {\r\n  const request = axios.post(baseUrl, user)\r\n  \r\n  return request.then(req => req.data)\r\n}\r\npostLogin.propTypes = {\r\n  baseUrl: PropTypes.string.isRequired\r\n}\r\nexport default { postLogin }","import React from 'react'\r\nimport {connect} from 'react-redux'\r\n\r\nconst RemBut = ({user, blog, deleteBlog}) => {\r\n  \r\n  \r\n\r\n\r\n  if(1){\r\n    return(\r\n      <button type=\"submit\" onClick = {deleteBlog} >remove</button>\r\n    )}\r\n  else{\r\n    return(null)\r\n  }\r\n\r\n  \r\n}\r\n\r\n\r\nexport default RemBut\r\n\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport put from '../services/blogs'\r\nimport remove from '../services/blogs'\r\nimport RemBut from './RemoveButton'\r\nimport {BrowserRouter as Router,\r\n  Route, Link,useParams, Redirect, withRouter\r\n  } from 'react-router-dom'\r\nimport getAll from '../services/blogs'\r\n\r\n\r\n\r\n\r\nconst Blog = ({ blg, user, likeBlog, deleteBlog }) => {\r\n  const [showBlog, setBlogShow] = useState(false)\r\n  const [a, setA] = useState(0)\r\n\r\n  \r\n\r\n\r\n  const blogStyle = {\r\n    paddingTop: 10,\r\n    paddingLeft: 2,\r\n    border: 'solid',\r\n    borderWidth: 1,\r\n    marginBottom: 5\r\n  }\r\n\r\n  console.log(blg)\r\n\r\n\r\n\r\n  \r\n\r\n\r\n\r\n  if(showBlog === false){\r\n    return(\r\n      \r\n        <div data-testid=\"klikkeri\" style={blogStyle} onClick={() => setBlogShow(showBlog===false ? true : false)}>\r\n          <Link to={'/blogs/'+ blg.id}> {blg.title} {blg.author} </Link>\r\n        </div>\r\n        \r\n      \r\n\r\n    )\r\n  }\r\n  else{\r\n    return(\r\n      <div>\r\n        <div style={blogStyle} onClick={() => setBlogShow(showBlog===false ? true : false)}>\r\n          <div>\r\n            {console.log(blg)}\r\n        Title: {blg.title}\r\n          </div>\r\n          <div>\r\n      Author: {blg.author}\r\n          </div>\r\n          <div>\r\n        Likes: {blg.likes} <button onClick = {() => likeBlog(blg)}>like</button>\r\n          </div>\r\n          <div>\r\n        Url: {blg.url}\r\n          </div>\r\n          <div>\r\n            Comments {blg.comments}\r\n          </div>\r\n        </div>\r\n\r\n        <RemBut deleteBlog={() => deleteBlog(blg)} user={user} blog={blg} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default Blog","import {useState} from 'react'\r\n\r\n\r\nconst useField = (type) => {\r\n  const [value, setValue] = useState('')\r\n  \r\n  const onChange = (event) => {\r\n    setValue(event.target.value)\r\n  }\r\n\r\n  const reset = (event) => {\r\n      event.preventDefault()\r\n      setValue('')\r\n  }\r\n\r\n  return {\r\n    type,\r\n    value,\r\n    onChange,\r\n    reset\r\n  }\r\n}\r\n\r\nexport default useField ","import React from 'react'\r\n\r\n\r\n\r\nconst BlogForm = ({title, url, author, addBlog }) => {\r\n  \r\n\r\n  return(\r\n    <div>      <h2>create new</h2>\r\n      <form onSubmit={addBlog}>\r\n        <div>\r\n        title:\r\n          <input\r\n            type={title.type}\r\n            value = {title.value}\r\n            onChange={title.onChange}/>\r\n        </div>\r\n        <div>\r\n        author:\r\n          <input\r\n            type={author.type}\r\n            value = {author.value}\r\n            onChange={author.onChange}/>\r\n\r\n        </div>\r\n        <div>\r\n      url:\r\n          <input type={url.type} value = {url.value} onChange={url.onChange}/>\r\n        </div>\r\n        <button type=\"submit\">create</button>\r\n      </form>\r\n    </div>\r\n    \r\n  )\r\n}\r\nexport default BlogForm\r\n","import React, { useState, useImperativeHandle } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Togglable = React.forwardRef((props, ref) => {\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  const hideWhenVisible = { display: visible ? 'none' : '' }\r\n  const showWhenVisible = { display: visible ? '' : 'none' }\r\n\r\n  const toggleVisibility = () => {\r\n    setVisible(!visible)\r\n  }\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      toggleVisibility\r\n    }\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <div style={hideWhenVisible}>\r\n        <button onClick={toggleVisibility}>{props.buttonLabel}</button>\r\n      </div>\r\n      <div style={showWhenVisible}>\r\n        {props.children}\r\n        <button onClick={toggleVisibility}>cancel</button>\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nTogglable.propTypes = {\r\n  buttonLabel: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Togglable","const initialState = null\r\n  \r\n  \r\n  \r\n  const reducer = (state = initialState , action) => {\r\n  \r\n  \r\n    console.log(action)\r\n    \r\n    switch (action.type) {\r\n      case 'NEW_MESSAGE':\r\n        \r\n        console.log(action.message)\r\n        return action.message\r\n      default: return state\r\n      }\r\n    \r\n  }\r\n\r\n  export const setNot = (mes) => {\r\n    return async dispatch => {\r\n      dispatch({\r\n        type: 'NEW_MESSAGE',\r\n        message:  mes\r\n      })\r\n    }\r\n  }\r\n  \r\n  export default reducer","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nconst Notification = ( props  ) => {\r\n    \r\n    if (props.message === null) {\r\n      return null\r\n    }\r\n    return (\r\n      <div className=\"success\">\r\n        {props.message}\r\n      </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    // joskus on hyödyllistä tulostaa mapStateToProps:ista...\r\n    console.log(state)\r\n    return {\r\n        blogs: state.blogs,\r\n        message: state.message,\r\n        user: state.user\r\n    }\r\n}\r\n    \r\n    const ConnectAnecdotes = connect(mapStateToProps)(Notification)\r\n    \r\n    \r\nexport default ConnectAnecdotes\r\n  ","\r\nimport {connect} from 'react-redux'\r\nimport {BrowserRouter as Router,\r\n    Route, Link,useParams, Redirect, withRouter\r\n    } from 'react-router-dom'\r\n\r\nimport React from 'react'\r\nimport {useState} from 'react'\r\nimport axios from 'axios'\r\n\r\nconst padding = { padding: 5}\r\n\r\n\r\nconst SinglUser = (props) =>{\r\n    const id = useParams().id\r\n    \r\n    \r\n\r\n    \r\n    \r\n\r\n    return(\r\n        <div>\r\n            <h1>\r\n                {props.user.name}\r\n            </h1>\r\n            <h3>\r\n                Added blogs\r\n            </h3>\r\n            {props.blogs.map(b => {\r\n                if(b.user.id == id){\r\n                    return(\r\n                        <li>\r\n                            {b.title}\r\n                        </li>\r\n                    )\r\n                    \r\n                }\r\n            })}\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    // joskus on hyödyllistä tulostaa mapStateToProps:ista...\r\n    \r\n    \r\n    \r\n    return {\r\n      blogs: state.blogs,\r\n      message: state.message,\r\n      user: state.user\r\n        }\r\n}\r\n\r\nconst SingleUser = connect(mapStateToProps)(SinglUser)\r\nexport default SingleUser\r\n  ","import React from 'react'\r\nimport  BlogsByUsers from './components/BlogsByUsers'\r\nimport SingleBlog from './components/SingleBlog'\r\nimport { useState } from 'react'\r\nimport { useEffect } from 'react'\r\nimport postLogin from './services/login'\r\nimport getAll from './services/blogs'\r\nimport setToken from './services/blogs'\r\nimport Blog from './components/Blog'\r\nimport create from './services/blogs'\r\nimport useField from './hooks/index'\r\nimport './index.css'\r\nimport put from './services/blogs'\r\nimport BlogForm from './components/blogForm'\r\nimport { connect } from 'react-redux'\r\nimport { addNew,like } from './reducers/BlogReducer'\r\nimport Togglable from './components/Togglable'\r\nimport { setNot } from './reducers/NfReducer'\r\nimport Notification from './components/Notification'\r\nimport { initializeBlogs, delBlog } from './reducers/BlogReducer'\r\nimport SingleUser from './components/SingleUser'\r\nimport axios from 'axios'\r\nimport {BrowserRouter as Router,\r\n  Route, Link,useParams, Redirect, withRouter\r\n  } from 'react-router-dom'\r\nimport remove from './services/blogs'\r\n\r\n\r\nimport loginReducer, { setU } from './reducers/loginReducer'\r\nimport Axios from 'axios'\r\n\r\n\r\n\r\n\r\nconst padding = { padding: 5 }\r\n\r\nconst App = (props) => {\r\n\r\n \r\n\r\n  const [username , setUsername] = useState('')\r\n  const [password , setPassword] = useState('')\r\n  const [blogs, setBlogs] = useState([])\r\n\r\n  \r\n  const uName = useField('text')\r\n  const pW = useField('text')\r\n  const title = useField('text')\r\n  const author = useField('text')\r\n  const url = useField('text')\r\n\r\n  \r\n  //const [newBlog, setNewBlog] = useState('')\r\n  const [user, setUser] = useState(null)\r\n  const [errM, setErrM] = useState(null)\r\n\r\n  const blogFormRef = React.createRef()\r\n\r\n  const [init_trigger, setInitTrig] = useState(0)\r\n\r\n  const Err = ({ message }) => {\r\n    if(message === null){\r\n      return null\r\n    }\r\n    return(\r\n      <div className=\"err\">\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n  useEffect(() => {\r\n    \r\n    let fBlogs = []\r\n    getAll.getAll().then(b => b.map(B => {\r\n\r\n      const tempBlog = (B)\r\n      fBlogs = fBlogs.concat(tempBlog)\r\n\r\n      \r\n    }))\r\n    \r\n\r\n    setBlogs(fBlogs)\r\n\r\n  }, [])\r\n\r\n\r\n  const likeBlog = (blg) => {\r\n    \r\n    const newBlog = {\r\n      title: blg.title,\r\n      author: blg.author,\r\n      url: blg.author,\r\n      likes: blg.likes,\r\n      user: blg.user,\r\n      comments: []\r\n\r\n    }\r\n    const id=blg.id\r\n    \r\n    put.put(newBlog,id)\r\n    props.like(id)\r\n  }\r\n\r\n  \r\n\r\n\r\n  useEffect(() => {\r\n    const loggedUserJSON = (window.localStorage.getItem('userLogged'))\r\n    console.log((loggedUserJSON))\r\n\r\n    if (loggedUserJSON!==null && loggedUserJSON!==undefined) {\r\n      const user = JSON.parse(loggedUserJSON)\r\n      \r\n      props.setU(user)\r\n\r\n      setUser(user)\r\n      setToken.setToken(user.token)\r\n \r\n    \r\n      \r\n\r\n      \r\n\r\n    }\r\n  }, [])\r\n\r\n\r\n  useEffect(() => {\r\n    \r\n    props.initializeBlogs()\r\n    \r\n    \r\n  },[])\r\n\r\n  \r\n  \r\n  const addBlog =async (event) => {\r\n    event.preventDefault()\r\n    \r\n    const blogToAdd = {\r\n      title: title.value,\r\n      author: author.value,\r\n      url: url.value,\r\n      comments: [],\r\n      user: props.user,\r\n      likes : 0\r\n\r\n    }\r\n    blogFormRef.current.toggleVisibility()\r\n    await create.create(blogToAdd)\r\n\r\n    props.setNot('You added '+ blogToAdd.title)\r\n    props.addNew(blogToAdd)\r\n    \r\n    setInitTrig(init_trigger + 1)\r\n\r\n  }\r\n\r\n\r\n  \r\n\r\n  useEffect(() => {\r\n    console.log('props bf init', props)\r\n    props.initializeBlogs()\r\n    setTimeout(() => {\r\n      console.log('props after init', props)\r\n    },[5000])\r\n    \r\n  },[init_trigger])\r\n\r\n\r\n\r\n\r\n\r\n  const handleLogout = () => {\r\n    window.localStorage.removeItem('userLogged')\r\n    props.setU(null)\r\n\r\n  }\r\n\r\n  const handleLogin = (event) => {\r\n    event.preventDefault()\r\n\r\n    const userToLog = {\r\n      'username' : uName.value,\r\n      'password' : pW.value,\r\n   \r\n    }\r\n\r\n\r\n    const login = postLogin.postLogin(userToLog)\r\n\r\n    console.log('logging in with', uName.value, pW.value)\r\n    \r\n\r\n    login.then(\r\n      l => {\r\n        window.localStorage.setItem('userLogged', JSON.stringify(l))\r\n        props.setU(l)\r\n        console.log(l)\r\n        \r\n        \r\n        //window.localStorage.setItem('loggedUser', JSON.stringify(l))\r\n        console.log('bb')\r\n        setToken.setToken(l.token)\r\n        console.log('cc')\r\n      }).catch(setErrM('Wrong username or password'))\r\n\r\n\r\n\r\n  }\r\n\r\n  const deleteBlog = (blg) => {\r\n \r\n    window.confirm('remove blog' + blg.title + 'by' + blg.author)\r\n   \r\n    remove.remove(blg.id)\r\n    props.delBlog(blg.id)\r\n    \r\n  }\r\n\r\n  \r\n\r\n  \r\n\r\n  if (props.user === null) {\r\n\r\n    return (\r\n\r\n      <div>\r\n        <h2>Login</h2>\r\n        <Err message={errM} />\r\n        <form onSubmit={handleLogin}>\r\n          <div>\r\n\r\n            username\r\n            <input type={uName.type} value={uName.value} name=\"Username\" onChange = {uName.onChange}/>\r\n            <button type='reset' onClick = {uName.reset} >reset</button>\r\n          </div>\r\n          <div>\r\n            password\r\n            <input data-testid=\"pw\" type={pW.type} value={pW.value} name=\"Password\" onChange={pW.onChange}/>\r\n            <button type='reset' onClick = {pW.reset} >reset</button>\r\n          </div>\r\n          <button type=\"submit\">login</button>\r\n        </form>\r\n      </div>\r\n\r\n    )\r\n  }\r\n  \r\n  else{\r\n    return(\r\n      \r\n        <Router>\r\n\r\n        <Route exact path=\"/\" render={() => \r\n         <div>\r\n         <h2>blogs</h2>\r\n          <form onSubmit={handleLogout}>\r\n            <h3>\r\n              {props.user.username + ' logged in'}\r\n              <button type='submit'>  logout</button>\r\n            </h3>\r\n\r\n          </form>\r\n          <Notification  />\r\n          \r\n          <Togglable buttonLabel = 'New blog' ref={blogFormRef}>\r\n            <BlogForm addBlog={addBlog} title={title} url={url} author={author} />\r\n          </Togglable>\r\n          \r\n          {props.blogs.map(blog =>\r\n          \r\n          \r\n          <Blog deleteBlog= {deleteBlog} key={blog.id} user={props.user} blg={blog} likeBlog={likeBlog}/>\r\n          \r\n          )}\r\n          \r\n          \r\n          </div>\r\n        } />\r\n\r\n        <Route exact path='/users' render={() => \r\n        \r\n        <div>\r\n          <h2>blogs</h2>\r\n          <form onSubmit={handleLogout}>\r\n            <h3>\r\n              {props.user.username + ' logged in'}\r\n              <button type='submit'>  logout</button>\r\n            </h3>\r\n\r\n          </form>\r\n          <BlogsByUsers/>\r\n        </div>\r\n        }/>\r\n\r\n        <Route path='/users/:id' render={() =>\r\n           <div>\r\n          <h2>blogs</h2>\r\n          <form onSubmit={handleLogout}>\r\n            <h3>\r\n              {props.user.username + ' logged in'}\r\n              <button type='submit'>  logout</button>\r\n            </h3>\r\n\r\n          </form>\r\n          <SingleUser/>\r\n        </div>\r\n        }/>\r\n\r\n        <Route path='/blogs/:id' render={() => \r\n        <div>\r\n            <h2>blogs</h2>\r\n            <form onSubmit={handleLogout}>\r\n              <h3>\r\n                {props.user.username + ' logged in'}\r\n                <button type='submit'>  logout</button>\r\n              </h3>\r\n  \r\n            </form>\r\n\r\n            <SingleBlog />\r\n          </div>\r\n        }/>\r\n        \r\n      </Router>\r\n\r\n        \r\n\r\n      \r\n    )\r\n  }\r\n\r\n\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  // joskus on hyödyllistä tulostaa mapStateToProps:ista...\r\n  \r\n  console.log(state)\r\n  \r\n  return {\r\n    blogs: state.blogs,\r\n    message: state.message,\r\n    user: state.user\r\n      }\r\n}\r\n\r\n\r\n\r\n\r\nconst con = connect(mapStateToProps)(App)\r\nconst con_2 = connect(null, { setNot,like } )(con)\r\nconst con_3 = connect(null, { addNew, delBlog })(con_2)\r\nconst con_4 = connect(null,{ initializeBlogs })(con_3)\r\nconst con_5 = connect(null, {setU})(con_4)\r\n\r\nexport default con_5","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport thunk from 'redux-thunk';\r\nimport reducer from '../reducers/NfReducer'\r\nimport BlogReducer from '../reducers/BlogReducer'\r\nimport loginReducer from '../reducers/loginReducer';\r\n\r\nconst redu = combineReducers({\r\n    message: reducer,\r\n    blogs: BlogReducer,\r\n    user: loginReducer\r\n  })\r\n  \r\n  const store = createStore(redu, composeWithDevTools(applyMiddleware(thunk)))\r\n\r\n  \r\n  \r\n\r\n  export default store\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport store from './services/redux_store'\r\nimport { Provider } from 'react-redux'\r\nimport {BrowserRouter as Router,\r\nRoute, Link,useParams, Redirect, withRouter\r\n} from 'react-router-dom'\r\n\r\nimport {SingleUser} from './components/SingleUser'\r\n\r\n\r\nconst render = () => {\r\n    ReactDOM.render(<Provider store={store}>\r\n        <App/>    \r\n       </Provider>, document.getElementById('root')\r\n    )\r\n  }\r\n  \r\n  render()\r\n  store.subscribe(render)\r\n"],"sourceRoot":""}